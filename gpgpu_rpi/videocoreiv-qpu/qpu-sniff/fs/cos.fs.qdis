/*

vs/null.vs:
void main(void) {
}


fs/cos.fs:
uniform vec4 c1;
uniform vec4 c2;
void main(void) {
  gl_FragColor = cos(c1);
}

*/
# ('shader code' 18ef7840 896)
/* 00000000: 15827d80 10020827 */  mov r0, unif
/* 00000008: 20827030 100059c0 */  nop; fmul ra0, unif, r0
/* 00000010: 009e7000 100009e7 */  nop
/* 00000018: 87020dbf 10024823 */  ftoi r0, ra0; mov r3, unif
/* 00000020: 28827033 10025804 */  itof r0, r0; fmul ra4, unif, r3
/* 00000028: 02027c00 10020027 */  fsub ra0, ra0, r0
/* 00000030: 07127d80 100208e7 */  ftoi r3, ra4
/* 00000038: 280276f6 10025041 */  itof rb1, r3; fmul ra1, ra0, ra0
/* 00000040: 009e7000 100009e7 */  nop
/* 00000048: 20067036 100059c2 */  nop; fmul ra2, ra1, ra1
/* 00000050: 20060037 100059e0 */  nop; fmul r0, ra1, unif
/* 00000058: 01827180 10020827 */  fadd r0, r0, unif
/* 00000060: 200a7006 100059e0 */  nop; fmul r0, r0, ra2
/* 00000068: 20060037 100059e1 */  nop; fmul r1, ra1, unif
/* 00000070: 21060077 10024821 */  fadd r0, r0, r1; fmul r1, ra1, unif
/* 00000078: 01827180 100200e7 */  fadd ra3, r0, unif
/* 00000080: 01827380 10020827 */  fadd r0, r1, unif
/* 00000088: 200e7036 100059e2 */  nop; fmul r2, ra3, ra3
/* 00000090: 200a7006 100059e0 */  nop; fmul r0, r0, ra2
/* 00000098: 20060037 100059e1 */  nop; fmul r1, ra1, unif
/* 000000a0: 810e7076 10024821 */  fadd r0, r0, r1; mov r1, ra3
/* 000000a8: 01827180 10020827 */  fadd r0, r0, unif
/* 000000b0: 20027006 100059c0 */  nop; fmul ra0, r0, ra0
/* 000000b8: 02101dc0 10020127 */  fsub ra4, ra4, rb1
/* 000000c0: 20027036 100059e0 */  nop; fmul r0, ra0, ra0
/* 000000c8: 22027431 10024821 */  fsub r0, r2, r0; fmul r1, ra0, r1
/* 000000d0: 209e7000 100059c0 */  nop; fmul ra0, r0, r0
/* 000000d8: 2082700e 100059e0 */  nop; fmul r0, r1, unif
/* 000000e0: 35827d80 10024080 */  mov ra2, unif; fmul rb0, r0, r0
/* 000000e8: 20127036 100059c3 */  nop; fmul ra3, ra4, ra4
/* 000000f0: 01000dc0 10020827 */  fadd r0, ra0, rb0
/* 000000f8: 220e0e36 10025801 */  fsub r0, unif, r0; fmul ra1, ra3, ra3
/* 00000100: 02000dc0 10020867 */  fsub r1, ra0, rb0
/* 00000108: 209e7001 100059e3 */  nop; fmul r3, r0, r1
/* 00000110: 200e0037 100059e0 */  nop; fmul r0, ra3, unif
/* 00000118: 01827180 10020827 */  fadd r0, r0, unif
/* 00000120: 20067006 100059e0 */  nop; fmul r0, r0, ra1
/* 00000128: 200e0037 100059e1 */  nop; fmul r1, ra3, unif
/* 00000130: 210e0077 10024821 */  fadd r0, r0, r1; fmul r1, ra3, unif
/* 00000138: 01827180 10020027 */  fadd ra0, r0, unif
/* 00000140: 01827380 10020827 */  fadd r0, r1, unif
/* 00000148: 20027036 100059e2 */  nop; fmul r2, ra0, ra0
/* 00000150: 20067006 100059e0 */  nop; fmul r0, r0, ra1
/* 00000158: 200e0037 100059e1 */  nop; fmul r1, ra3, unif
/* 00000160: 81027076 10024821 */  fadd r0, r0, r1; mov r1, ra0
/* 00000168: 01827180 10020827 */  fadd r0, r0, unif
/* 00000170: 20127006 100059c4 */  nop; fmul ra4, r0, ra4
/* 00000178: 200a003e 100059c2 */  nop; fmul ra2, unif, ra2
/* 00000180: 20127036 100059e0 */  nop; fmul r0, ra4, ra4
/* 00000188: 22127431 10024821 */  fsub r0, r2, r0; fmul r1, ra4, r1
/* 00000190: 270a7d80 10025884 */  ftoi r2, ra2; fmul ra4, r0, r0
/* 00000198: 2882748e 10025060 */  itof rb1, r2; fmul r0, r1, unif
/* 000001a0: 209e7000 100049c0 */  nop; fmul rb0, r0, r0
/* 000001a8: 02081dc0 100200a7 */  fsub ra2, ra2, rb1
/* 000001b0: 01100dc0 10020827 */  fadd r0, ra4, rb0
/* 000001b8: 220a0e36 10025800 */  fsub r0, unif, r0; fmul ra0, ra2, ra2
/* 000001c0: 02100dc0 10020867 */  fsub r1, ra4, rb0
/* 000001c8: 35827d81 11424160 */  mov ra5, unif; fmul r0.8a, r0, r1
/* 000001d0: 809e701b 115059e0 */  nop; mov r0.8b, r3
/* 000001d8: 20027036 100059c4 */  nop; fmul ra4, ra0, ra0
/* 000001e0: 20020037 100059e1 */  nop; fmul r1, ra0, unif
/* 000001e8: 01827380 10020867 */  fadd r1, r1, unif
/* 000001f0: 2012700e 100059e1 */  nop; fmul r1, r1, ra4
/* 000001f8: 20020037 100059e2 */  nop; fmul r2, ra0, unif
/* 00000200: 210202b7 10024862 */  fadd r1, r1, r2; fmul r2, ra0, unif
/* 00000208: 01827380 100200e7 */  fadd ra3, r1, unif
/* 00000210: 01827580 10020867 */  fadd r1, r2, unif
/* 00000218: 200e7036 100059c1 */  nop; fmul ra1, ra3, ra3
/* 00000220: 2012700e 100059e1 */  nop; fmul r1, r1, ra4
/* 00000228: 20020037 100059e2 */  nop; fmul r2, ra0, unif
/* 00000230: 810e72b6 10024862 */  fadd r1, r1, r2; mov r2, ra3
/* 00000238: 01827380 10021027 */  fadd rb0, r1, unif
/* 00000240: 2016003e 100059c5 */  nop; fmul ra5, unif, ra5
/* 00000248: 2008003e 100059c2 */  nop; fmul ra2, rb0, ra2
/* 00000250: 07167d80 100208e7 */  ftoi r3, ra5
/* 00000258: 280a76f6 10025061 */  itof rb1, r3; fmul r1, ra2, ra2
/* 00000260: 02067c40 10020867 */  fsub r1, ra1, r1
/* 00000268: 22141dc9 10025041 */  fsub rb1, ra5, rb1; fmul ra1, r1, r1
/* 00000270: 200a7032 100059e1 */  nop; fmul r1, ra2, r2
/* 00000278: 2082700e 100059e1 */  nop; fmul r1, r1, unif
/* 00000280: 209e7009 400049c0 */  nop; fmul rb0, r1, r1; sbwait
/* 00000288: 209c103f 100059c2 */  nop; fmul ra2, rb1, rb1
/* 00000290: 01040dc0 10020867 */  fadd r1, ra1, rb0
/* 00000298: 220a0e76 10025845 */  fsub r1, unif, r1; fmul ra5, ra2, ra2
/* 000002a0: 02040dc0 100208a7 */  fsub r2, ra1, rb0
/* 000002a8: 209e700a 116059e0 */  nop; fmul r0.8c, r1, r2
/* 000002b0: 200a0037 100059e1 */  nop; fmul r1, ra2, unif
/* 000002b8: 01827380 10020867 */  fadd r1, r1, unif
/* 000002c0: 2016700e 100059e1 */  nop; fmul r1, r1, ra5
/* 000002c8: 200a0037 100059e2 */  nop; fmul r2, ra2, unif
/* 000002d0: 210a02b7 10024862 */  fadd r1, r1, r2; fmul r2, ra2, unif
/* 000002d8: 01827380 10020067 */  fadd ra1, r1, unif
/* 000002e0: 01827580 10020867 */  fadd r1, r2, unif
/* 000002e8: 20067036 100059c3 */  nop; fmul ra3, ra1, ra1
/* 000002f0: 2016700e 100059e1 */  nop; fmul r1, r1, ra5
/* 000002f8: 200a0037 100059e2 */  nop; fmul r2, ra2, unif
/* 00000300: 810672b6 10024862 */  fadd r1, r1, r2; mov r2, ra1
/* 00000308: 01827380 10020867 */  fadd r1, r1, unif
/* 00000310: 209c100f 100059c2 */  nop; fmul ra2, r1, rb1
/* 00000318: 009e7000 100009e7 */  nop
/* 00000320: 200a7036 100059e1 */  nop; fmul r1, ra2, ra2
/* 00000328: 020e7c40 10020867 */  fsub r1, ra3, r1
/* 00000330: 209e7009 100059c3 */  nop; fmul ra3, r1, r1
/* 00000338: 200a7032 100059e1 */  nop; fmul r1, ra2, r2
/* 00000340: 2082700e 100059e1 */  nop; fmul r1, r1, unif
/* 00000348: 209e7009 100049c1 */  nop; fmul rb1, r1, r1
/* 00000350: 009e7000 100009e7 */  nop
/* 00000358: 010c1dc0 10020867 */  fadd r1, ra3, rb1
/* 00000360: 02827c40 10020867 */  fsub r1, unif, r1
/* 00000368: 020c1dc0 300208a7 */  fsub r2, ra3, rb1; nop; thrend
/* 00000370: 209e700a 117059e0 */  nop; fmul r0.8d, r1, r2
/* 00000378: 159e7000 50020ba7 */  mov tlbc, r0; nop; sbdone

# ('shader code' 18f71480 104)
/* 00000000: 15827d80 10120027 */  mov ra0.16a, unif
/* 00000008: 15827d80 10220027 */  mov ra0.16b, unif
/* 00000010: 15827d80 10021c67 */  mov vw_setup, unif
/* 00000018: 15827d80 10020c27 */  mov vpm, unif
/* 00000020: 15827d80 10020c27 */  mov vpm, unif
/* 00000028: 15827d80 10020c27 */  mov vpm, unif
/* 00000030: 15827d80 10020c27 */  mov vpm, unif
/* 00000038: 95020dbf 10024c20 */  mov vpm, ra0; mov r0, unif
/* 00000040: 01827c00 10020c27 */  fadd vpm, unif, r0
/* 00000048: 15827d80 10020c27 */  mov vpm, unif
/* 00000050: 009e7000 300009e7 */  nop; nop; thrend
/* 00000058: 009e7000 100009e7 */  nop
/* 00000060: 009e7000 100009e7 */  nop

# ('shader code' 18fb15e0 72)
/* 00000000: 15827d80 10120027 */  mov ra0.16a, unif
/* 00000008: 15827d80 10220027 */  mov ra0.16b, unif
/* 00000010: 15827d80 10021c67 */  mov vw_setup, unif
/* 00000018: 95020dbf 10024c20 */  mov vpm, ra0; mov r0, unif
/* 00000020: 01827c00 10020c27 */  fadd vpm, unif, r0
/* 00000028: 15827d80 10020c27 */  mov vpm, unif
/* 00000030: 009e7000 300009e7 */  nop; nop; thrend
/* 00000038: 009e7000 100009e7 */  nop
/* 00000040: 009e7000 100009e7 */  nop

